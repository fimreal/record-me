user root;
pcre_jit on;
events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    # lua dict
    lua_shared_dict memdb 10m;

server {
    listen 80 ;
    root /wwwroot;
    resolver 223.5.5.5 1.1.1.1 valid=30s;

    location /mailme {
        # container: epurs/http2mail
        proxy_pass http://172.17.0.1:5000;
    }

    location /mailcode {
        add_header Content-Type 'text/plain; charset=utf-8';
        content_by_lua_block {
            require "resty.core"
            local memdb = ngx.shared.memdb
            local args = ngx.req.get_uri_args()
            local username = args["username"]
            local mailSuffix = "xxx.com"  -- CHANGEME

            -- 校验输入用户名
            local captures, err = ngx.re.match(username, "[a-z]{4,}")
            if err or not captures then
                ngx.log(ngx.ALERT, username .. " is valid")
                ngx.say("请输入正确的用户名")
                return
            end

            -- 生成6位验证码
            local pool = {1,2,3,4,5,6,7,8,9,0}
            math.randomseed(ngx.time())
            local code = pool[math.random(1, #pool)]..pool[math.random(1, #pool)]..pool[math.random(1, #pool)]..pool[math.random(1, #pool)]..pool[math.random(1, #pool)]..pool[math.random(1, #pool)]

            -- 写入内存
            local ok, err = memdb:set(username, code, 300) -- 5min 过期

            -- 创建请求
            local httpc = require("resty.http").new()
            local mailBotUrl = "http://127.0.0.1/mailme"
            local mailContent = "<p>【申请跳板机账号】验证码: " .. code .. "<br><br>有效期: 5 分钟，如果不是你本人申请，请忽略该邮件。</p>"
            local mailbody = "mailto=" .. username .. "@"..mailSuffix.."&subject=" .. username .. " 的验证码" .. "&body=" .. mailContent
            ngx.log(ngx.ALERT, "发送邮件给[ " .. username .. "@"..mailSuffix.." ]")
            local res, err = httpc:request_uri(mailBotUrl, {
                method = "POST",
                body = mailbody,
                headers = {
                    ["Content-Type"] = "application/x-www-form-urlencoded",
                },
            })
            if not res then
                ngx.log(ngx.ERR, "request failed: ", err)
                return
            end

            ngx.say("验证码申请成功!<br>请打开<a href=http://mail."..mailSuffix.."/>邮箱</a>[ " .. username .. "@"..mailSuffix.." ]查看")
        }
    }

    location /cuser {
        add_header Content-Type 'text/plain; charset=utf-8';
        content_by_lua_block {
            local shell = require "resty.shell"
            local c = {1,2,3,4,5,6,7,8,9,0,"Q","W","E","R","T","Y","U","I","O","P","L","K","J","H","G","F","D","S","A","Z","X","C","V","B","N","M","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","y","z","!","@","^","*","."}
            math.randomseed(os.time())
            local password = c[math.random(1, #c)]..c[math.random(1, #c)]..c[math.random(1, #c)]..c[math.random(1, #c)]..c[math.random(1, #c)]..c[math.random(1, #c)]..c[math.random(1, #c)]..c[math.random(1, #c)]..c[math.random(1, #c)]..c[math.random(1, #c)]..c[math.random(1, #c)]..c[math.random(1, #c)]..c[math.random(1, #c)]..c[math.random(1, #c)]..c[math.random(1, #c)]..c[math.random(1, #c)]
            local expiretime = os.date("%Y-%m-%d", os.time() + 7*24*60*60)
            -- 解析输入参数
            local arg = ngx.req.get_uri_args()
            local username = arg["username"]
            local email = username .. "@"..mailSuffix
            local code = arg["code"]
            -- http 请求，用于校验 code，发邮件
            local httpc = require("resty.http").new()
            local mailSuffix = "xxx.com"  -- CHANGEME

            -- 校验输入用户名
            local captures, err = ngx.re.match(username, "[a-z]{4,}")
            if err or not captures then
                ngx.log(ngx.ALERT, username .. " is valid")
                return
            end
            -- 检查名称是否是系统账号
            local cmdStr = "/usr/bin/id -u " .. username
            local ok, stdout, stderr, reason =
                shell.run(cmdStr)
            if ok and tonumber(stdout) < 1000 then
                ngx.say("账号名字不合规[" .. username .. "]")
                ngx.log(ngx.ALERT, "非法创建账号[ " .. username .. " ]!")
                return
            end

            -- 校验输入验证码
            local captures, err = ngx.re.match(code, "[0-9]{6}")
            if err or not captures then
                ngx.log(ngx.ALERT, code .. " is valid")
                ngx.say("验证码输入有误！")
                return
            end
            -- 校验验证码是否正确
            require "resty.core"
            local memdb = ngx.shared.memdb
            local flushed = memdb:flush_expired() -- gc
            local ok, err = memdb:set(username, nil, 1) -- 删掉该验证码
            local answer =  memdb:get(username)
            if not answer == "code" then
                ngx.log(ngx.ERR, "request failed: ", res, err)
                ngx.say("验证码输入有误！")
                return
            end

            -- 构造命令
            local cmdCreateUser = "/sbin/useradd " .. username .. " -e " .. expiretime .. " -mb /data/home -c " .. email
            local cmdRenewUser  = "/sbin/usermod " .. username .. " -e " .. expiretime
            local cmdPasswdUser = "echo "          .. username .. ":"    .. password   .. " | /sbin/chpasswd"
            function shellExec(cmdStr)
                local ok, stdout, stderr, reason =
                    shell.run(cmdStr)
                if not ok then
                    ngx.log(ngx.ERR, " Reason: " .. reason .. " Stderr: " .. stderr)
                end
                return ok
            end

            -- 创建账号
            ngx.log(ngx.ALERT, "创建账号[ " .. cmdCreateUser .. " ]")
            if not shellExec(cmdCreateUser) then
                ngx.say("已存在该账号[" .. username .. "]")
            end

            -- 对已存在账号更新过期时间
            ngx.log(ngx.ALERT, "更新账号过期时间[ " .. cmdRenewUser .. " ]")
            if not shellExec(cmdRenewUser) then
                ngx.say("出错了，请稍后再试一次吧")
                return
            end

            -- 重置为随机密码
            ngx.log(ngx.ALERT, "修改密码[ " .. cmdPasswdUser .. " ]")
            if not shellExec(cmdPasswdUser) then
                ngx.say("出错了，请稍后再试一次吧")
            end

            -- 创建请求
            local mailBotUrl = "http://127.0.0.1/mailme"
            local mailContent = "<p>用户名: " .. username .. "<br>密码: " .. password .. "<br>过期时间: " .. expiretime .. "</p>"
            local mailbody = "mailto=" .. email .. "&subject=你的ssh账号密码".."&body=" .. mailContent
            ngx.log(ngx.ALERT, "发送邮件给[ " .. email .. " ]")
            local res, err = httpc:request_uri(mailBotUrl, {
                method = "POST",
                body = mailbody,
                headers = {
                    ["Content-Type"] = "application/x-www-form-urlencoded",
                },
            })
            if not res then
                ngx.log(ngx.ERR, "request failed: ", err)
                return
            end

            ngx.say("<p>申请成功！账号信息如下，稍后也将发送到您的邮箱。<p><br>" .. mailContent)
        }
    }
}

}
